[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rfdetr-mask"
version = "0.1.0"
description = "RF-DETR with instance segmentation capabilities"
readme = "README.md"
authors = [
    {name = "Roboflow, Inc", email = "peter@roboflow.com"}
]
license = {text = "Apache License 2.0"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS"
]
keywords = ["machine-learning", "deep-learning", "vision", "ML", "DL", "AI", "DETR", "RF-DETR", "Roboflow"]

dependencies = [
    "cython",
    "pycocotools",
    "torch>=1.13.0",
    "torchvision>=0.14.0",
    "fairscale",
    "scipy",
    "timm",
    "tqdm",
    "numpy",
    "accelerate",
    "transformers",
    "peft",
    "ninja",
    "einops",
    "pandas",
    "pylabel",
    "polygraphy",
    "open_clip_torch",
    "rf100vl",
    "pydantic",
    "supervision",
    "matplotlib",
]

[project.optional-dependencies]
metrics = [
    "tensorboard>=2.13.0",
    "wandb"
]
build = [
    "twine>=5.1.1",
    "wheel>=0.40",
    "build>=0.10"
]

[project.urls]
Homepage = "https://github.com/roboflow/rf-detr-mask"

[project.scripts]
rfdetr-mask = "rfdetr.cli.main:trainer"

[tool.setuptools]
include-package-data = false
[tool.setuptools.packages.find]
include = ["rfdetr*"]


[tool.setuptools.package-data]
rfdetr = ["py.typed", "models/backbone/dinov2_configs/*.json"]


[tool.pydocstyle]
convention = "google"
add-ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]
match-dir = "^(?!tests|scripts|build|docs).*"

[tool.codeflash]
# All paths are relative to this pyproject.toml's directory.
module-root = "."
tests-root = "tests"
test-framework = "pytest"
benchmarks-root = "tests/benchmarks"
ignore-paths = []
formatter-cmds = ["ruff check --exit-zero --fix $file", "ruff format $file"]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "mypy>=1.13.0",
    "ruff>=0.8.0",
    "pydocstyle>=6.3.0",
]

